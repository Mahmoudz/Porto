"use strict";(self.webpackChunkporto=self.webpackChunkporto||[]).push([[662],{3420:(e,r,i)=>{i.r(r),i.d(r,{assets:()=>l,contentTitle:()=>t,default:()=>h,frontMatter:()=>n,metadata:()=>a,toc:()=>c});var o=i(4848),s=i(8453);const n={sidebar_position:1},t="Layers Overview",a={id:"Layers/Layers Overview",title:"Layers Overview",description:"Porto is composed of two layers: Containers and Ship.",source:"@site/docs/Layers/Layers Overview.md",sourceDirName:"Layers",slug:"/Layers/Layers Overview",permalink:"/Porto/docs/Layers/Layers Overview",draft:!1,unlisted:!1,editUrl:"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/Layers/Layers Overview.md",tags:[],version:"current",sidebarPosition:1,frontMatter:{sidebar_position:1},sidebar:"tutorialSidebar",previous:{title:"Layers",permalink:"/Porto/docs/category/layers"},next:{title:"Containers Layer",permalink:"/Porto/docs/Layers/Containers Layer"}},l={},c=[{value:"Layers Diagram",id:"layers-diagram",level:2},{value:"Code Levels",id:"code-levels",level:3}];function d(e){const r={blockquote:"blockquote",code:"code",h1:"h1",h2:"h2",h3:"h3",li:"li",p:"p",strong:"strong",ul:"ul",...(0,s.R)(),...e.components};return(0,o.jsxs)(o.Fragment,{children:[(0,o.jsx)(r.h1,{id:"layers-overview",children:"Layers Overview"}),"\n",(0,o.jsxs)(r.p,{children:[(0,o.jsx)(r.strong,{children:"Porto"})," is composed of two layers: ",(0,o.jsx)(r.code,{children:"Containers"})," and ",(0,o.jsx)(r.code,{children:"Ship"}),"."]}),"\n",(0,o.jsxs)(r.ul,{children:["\n",(0,o.jsxs)(r.li,{children:[(0,o.jsx)(r.strong,{children:"The Containers layer"})," holds all your application business logic code (code that encapsulates your application's unique functionalities and operations)."]}),"\n",(0,o.jsxs)(r.li,{children:[(0,o.jsx)(r.strong,{children:"The Ship layer"})," holds the infrastructure code (code that is shared among all Containers, as well as code for decoupling from the framework and 3rd party libraries)."]}),"\n"]}),"\n",(0,o.jsxs)(r.blockquote,{children:["\n",(0,o.jsxs)(r.p,{children:["These layers can be created anywhere inside any framework of your choice, such as NestJS, Laravel, or Rails. They can reside in the ",(0,o.jsx)(r.code,{children:"app/"})," directory or in a new ",(0,o.jsx)(r.code,{children:"src/"})," directory at the root."]}),"\n"]}),"\n",(0,o.jsxs)(r.p,{children:[(0,o.jsx)(r.strong,{children:"Porto"})," Porto facilitates maintaining and updating your application by segregating your code into two layers: business logic in Containers and shared code in Ship. This approach ensures easy scalability without impacting underlying infrastructure, fostering a scalable and adaptable software architecture."]}),"\n",(0,o.jsx)(r.h2,{id:"layers-diagram",children:"Layers Diagram"}),"\n",(0,o.jsx)("img",{src:"/Porto/img/diagrams/porto_layers.svg",alt:"Porto Components",style:{width:"100%"}}),"\n",(0,o.jsx)(r.p,{children:"Containers layer (cargo containers) >> relies on >> Ship layer (cargo ship) >> relies on >> Framework (sea)"}),"\n",(0,o.jsx)(r.p,{children:"Before delving deeper, let's understand the different levels of code in your codebase:"}),"\n",(0,o.jsx)(r.h3,{id:"code-levels",children:"Code Levels"}),"\n",(0,o.jsxs)(r.ul,{children:["\n",(0,o.jsxs)(r.li,{children:[(0,o.jsx)(r.strong,{children:"High-level code"}),": Business logic code encapsulating complex logic and relying on the Mid-level code to function. Should reside in the ",(0,o.jsx)(r.code,{children:"Containers"})," layer."]}),"\n",(0,o.jsxs)(r.li,{children:[(0,o.jsx)(r.strong,{children:"Mid-level code"}),": Application general code implementing functionality that serves the High-level code and relies on the Low-level code to function. Should be in the ",(0,o.jsx)(r.code,{children:"Ship"})," layer."]}),"\n",(0,o.jsxs)(r.li,{children:[(0,o.jsx)(r.strong,{children:"Low-level code"}),": Framework code implementing basic operations like reading files from a disk or interacting with a database, typically residing in the Vendor directory."]}),"\n"]}),"\n",(0,o.jsx)(r.p,{children:"Understanding these three levels of code helps organize your codebase and ensures each level is responsible for the appropriate tasks. The Low-level code provides basic functionality, the Mid-level code acts as a bridge, and the High-level code contains application-specific logic. Porto simplifies code separation, boosting maintainability and scalability over time."}),"\n",(0,o.jsx)("img",{src:"/Porto/img/porto_ship_2.png",alt:"Porto Components",style:{width:"100%"}})]})}function h(e={}){const{wrapper:r}={...(0,s.R)(),...e.components};return r?(0,o.jsx)(r,{...e,children:(0,o.jsx)(d,{...e})}):d(e)}},8453:(e,r,i)=>{i.d(r,{R:()=>t,x:()=>a});var o=i(6540);const s={},n=o.createContext(s);function t(e){const r=o.useContext(n);return o.useMemo((function(){return"function"==typeof e?e(r):{...r,...e}}),[r,e])}function a(e){let r;return r=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:t(e.components),o.createElement(n.Provider,{value:r},e.children)}}}]);
"use strict";(self.webpackChunkporto=self.webpackChunkporto||[]).push([[662],{3420:(e,n,i)=>{i.r(n),i.d(n,{assets:()=>l,contentTitle:()=>t,default:()=>h,frontMatter:()=>a,metadata:()=>o,toc:()=>c});var r=i(4848),s=i(8453);const a={sidebar_position:1},t="Layers Overview",o={id:"Layers/Layers Overview",title:"Layers Overview",description:"Porto is composed of two layers: Containers and Ship.",source:"@site/docs/Layers/Layers Overview.md",sourceDirName:"Layers",slug:"/Layers/Layers Overview",permalink:"/Porto/docs/Layers/Layers Overview",draft:!1,unlisted:!1,editUrl:"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/Layers/Layers Overview.md",tags:[],version:"current",sidebarPosition:1,frontMatter:{sidebar_position:1},sidebar:"tutorialSidebar",previous:{title:"Layers",permalink:"/Porto/docs/category/layers"},next:{title:"Containers Layer",permalink:"/Porto/docs/Layers/Containers Layer"}},l={},c=[{value:"Layers Diagram",id:"layers-diagram",level:2},{value:"Containers Layer",id:"containers-layer",level:3},{value:"Ship Layer",id:"ship-layer",level:3},{value:"Ocean Layers",id:"ocean-layers",level:3},{value:"Code Levels",id:"code-levels",level:2}];function d(e){const n={blockquote:"blockquote",code:"code",h1:"h1",h2:"h2",h3:"h3",li:"li",p:"p",strong:"strong",ul:"ul",...(0,s.R)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(n.h1,{id:"layers-overview",children:"Layers Overview"}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Porto"})," is composed of two layers: ",(0,r.jsx)(n.code,{children:"Containers"})," and ",(0,r.jsx)(n.code,{children:"Ship"}),"."]}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"The Containers layer"})," holds all your application business logic code (code that encapsulates your application's unique functionalities and operations)."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"The Ship layer"})," holds the infrastructure code (code that is shared among all Containers, as well as code for decoupling from the framework and 3rd party libraries)."]}),"\n"]}),"\n",(0,r.jsxs)(n.blockquote,{children:["\n",(0,r.jsxs)(n.p,{children:["These layers can be created anywhere inside any framework of your choice, such as NestJS, Laravel, or Rails. They can reside in the ",(0,r.jsx)(n.code,{children:"app/"})," directory or in a new ",(0,r.jsx)(n.code,{children:"src/"})," directory at the root."]}),"\n"]}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Porto"})," Porto facilitates maintaining and updating your application by segregating your code into two layers: business logic in Containers and shared code in Ship. This approach ensures easy scalability without impacting underlying infrastructure, fostering a scalable and adaptable software architecture."]}),"\n",(0,r.jsx)(n.h2,{id:"layers-diagram",children:"Layers Diagram"}),"\n",(0,r.jsx)("img",{src:"/Porto/img/diagrams/porto_layers.svg",alt:"Porto Layers",style:{width:"100%"}}),"\n",(0,r.jsx)("br",{}),"\n",(0,r.jsx)("br",{}),"\n",(0,r.jsx)(n.p,{children:"This diagram provides a detailed view of the Porto architecture, showcasing how different layers and components interact and depend on each other."}),"\n",(0,r.jsx)(n.h3,{id:"containers-layer",children:"Containers Layer"}),"\n",(0,r.jsx)(n.p,{children:"The Containers layer is the core of the application where business logic is implemented. Containers are modular units that can be grouped into sections to organize related functionalities. Within a section, containers communicate directly. However, when communication is needed across sections or with external systems, it is facilitated through tools like a Message Broker or API Gateway. This modular approach ensures each container can operate independently yet interact seamlessly when necessary, enhancing flexibility and maintainability."}),"\n",(0,r.jsx)(n.h3,{id:"ship-layer",children:"Ship Layer"}),"\n",(0,r.jsx)(n.p,{children:"Supporting the Containers layer is the Ship layer, which provides essential shared infrastructure. This layer is divided into four key parts:"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Containers Bay"}),": This part includes foundational classes and utilities that are used consistently across all containers, ensuring uniformity."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Bridge Deck"}),": It contains shared interfaces and schemas that help in maintaining interoperability and standard communication protocols between containers."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Ship Ballast"}),": Hosts integration components that isolate containers from other parts of the application, promoting modular design and easing integration efforts."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Engine Room"}),": Focuses on core functionalities like dependency injection and automatic registration of components, crucial for efficient application management and performance optimization."]}),"\n"]}),"\n",(0,r.jsx)(n.h3,{id:"ocean-layers",children:"Ocean Layers"}),"\n",(0,r.jsx)(n.p,{children:"At the base of the Porto architecture lie the Ocean Layers, representing the underlying dependencies required for the system's operation. These foundational layers include:"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Frameworks & Libraries"}),": Essential for providing the necessary tools and functions used throughout the application development."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Runtime Environment"}),": Offers the runtime context in which the application executes, handling all necessary runtime operations."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Operating System"}),": Manages the hardware resources and provides the essential services that applications need to function."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Firmware"}),": Contains low-level software crucial for controlling and interacting with the hardware."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Physical Hardware"}),": The tangible machines and devices that form the physical foundation supporting all higher-level software components."]}),"\n"]}),"\n",(0,r.jsx)(n.p,{children:"Together, these layers ensure a robust, scalable, and maintainable architecture. By clearly defining the role and interaction of each layer, Porto provides a structured approach to building and managing complex applications, allowing for scalability and ease of maintenance."}),"\n",(0,r.jsx)(n.h2,{id:"code-levels",children:"Code Levels"}),"\n",(0,r.jsx)(n.p,{children:"Before delving deeper, let's understand the different levels of code in your codebase:"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"High-level code"}),": Business logic code encapsulating complex logic and relying on the Mid-level code to function. Should reside in the ",(0,r.jsx)(n.code,{children:"Containers"})," layer."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Mid-level code"}),": Application general code implementing functionality that serves the High-level code and relies on the Low-level code to function. Should be in the ",(0,r.jsx)(n.code,{children:"Ship"})," layer."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Low-level code"}),": Framework code implementing basic operations like reading files from a disk or interacting with a database, typically residing in the Vendor directory."]}),"\n"]}),"\n",(0,r.jsx)(n.p,{children:"Understanding these three levels of code helps organize your codebase and ensures each level is responsible for the appropriate tasks. The Low-level code provides basic functionality, the Mid-level code acts as a bridge, and the High-level code contains application-specific logic. Porto simplifies code separation, boosting maintainability and scalability over time."})]})}function h(e={}){const{wrapper:n}={...(0,s.R)(),...e.components};return n?(0,r.jsx)(n,{...e,children:(0,r.jsx)(d,{...e})}):d(e)}},8453:(e,n,i)=>{i.d(n,{R:()=>t,x:()=>o});var r=i(6540);const s={},a=r.createContext(s);function t(e){const n=r.useContext(a);return r.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function o(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:t(e.components),r.createElement(a.Provider,{value:n},e.children)}}}]);
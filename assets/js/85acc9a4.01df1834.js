"use strict";(self.webpackChunkporto=self.webpackChunkporto||[]).push([[985],{8252:(n,e,o)=>{o.r(e),o.d(e,{assets:()=>r,contentTitle:()=>c,default:()=>p,frontMatter:()=>i,metadata:()=>a,toc:()=>l});var t=o(4848),s=o(8453);const i={sidebar_position:10},c="Sub-Actions",a={id:"Components/Main Components Principles/Sub-Actions",title:"Sub-Actions",description:"Sub-Actions are designed to eliminate code duplication in Actions. They allow Actions to share a sequence of Tasks, while Tasks allow Actions to share a piece of functionality.",source:"@site/docs/Components/Main Components Principles/Sub-Actions.md",sourceDirName:"Components/Main Components Principles",slug:"/Components/Main Components Principles/Sub-Actions",permalink:"/docs/Components/Main Components Principles/Sub-Actions",draft:!1,unlisted:!1,editUrl:"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/Components/Main Components Principles/Sub-Actions.md",tags:[],version:"current",sidebarPosition:10,frontMatter:{sidebar_position:10},sidebar:"tutorialSidebar",previous:{title:"Exceptions",permalink:"/docs/Components/Main Components Principles/Exceptions"},next:{title:"Optional Components",permalink:"/docs/Components/Optional Components"}},r={},l=[{value:"Principles",id:"principles",level:2}];function u(n){const e={code:"code",h1:"h1",h2:"h2",li:"li",p:"p",ul:"ul",...(0,s.R)(),...n.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(e.h1,{id:"sub-actions",children:"Sub-Actions"}),"\n",(0,t.jsx)(e.p,{children:"Sub-Actions are designed to eliminate code duplication in Actions. They allow Actions to share a sequence of Tasks, while Tasks allow Actions to share a piece of functionality."}),"\n",(0,t.jsx)(e.h2,{id:"principles",children:"Principles"}),"\n",(0,t.jsxs)(e.ul,{children:["\n",(0,t.jsx)(e.li,{children:"Sub-Actions MUST call Tasks. If a Sub-Action is doing all the business logic without the help of at least one Task, it probably shouldn't be a Sub-Action but a Task instead."}),"\n",(0,t.jsx)(e.li,{children:"A Sub-Action MAY retrieve data from Tasks and pass data to another Task."}),"\n",(0,t.jsx)(e.li,{children:"A Sub-Action MAY call multiple Tasks (they can even call Tasks from other Containers)."}),"\n",(0,t.jsx)(e.li,{children:"Sub-Actions MAY return data to the Action."}),"\n",(0,t.jsx)(e.li,{children:"Sub-Action SHOULD NOT return a response (the Controller's job is to return a response)."}),"\n",(0,t.jsx)(e.li,{children:"Sub-Action SHOULD NOT call another Sub-Action (try to avoid that as much as possible)."}),"\n",(0,t.jsx)(e.li,{children:"Sub-Action SHOULD be used from Actions. However, they can be used from Events, Commands, and/or other Classes, but they SHOULD NOT be used from Controllers or Tasks."}),"\n",(0,t.jsxs)(e.li,{children:["Every Sub-Action SHOULD have only a single function named ",(0,t.jsx)(e.code,{children:"run()"}),"."]}),"\n"]})]})}function p(n={}){const{wrapper:e}={...(0,s.R)(),...n.components};return e?(0,t.jsx)(e,{...n,children:(0,t.jsx)(u,{...n})}):u(n)}},8453:(n,e,o)=>{o.d(e,{R:()=>c,x:()=>a});var t=o(6540);const s={},i=t.createContext(s);function c(n){const e=t.useContext(i);return t.useMemo((function(){return"function"==typeof n?n(e):{...e,...n}}),[e,n])}function a(n){let e;return e=n.disableParentContext?"function"==typeof n.components?n.components(s):n.components||s:c(n.components),t.createElement(i.Provider,{value:e},n.children)}}}]);